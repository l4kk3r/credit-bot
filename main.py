import telebot
from telebot import types
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
about_us_text = '''–ú—ã - –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –≤ —Å—Ñ–µ—Ä–µ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è.\n–ó–∞ –ø–ª–µ—á–∞–º–∏ –Ω–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ <b>–±–æ–ª–µ–µ 7 –ª–µ—Ç –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—å–µ—Ä—ã</b> –Ω–∞ –≤—ã—Å–æ–∫–∏—Ö –ø–æ–∑–∏—Ü–∏—è—Ö, –≤ —Å—Ñ–µ—Ä–µ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü, –∞ —Ç–∞–∫ –∂–µ –≤ —Å—Ñ–µ—Ä–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏. –ú—ã –≥–æ—Ç–æ–≤—ã —Å—Ç–∞—Ç—å –¥–ª—è –í–∞—Å –≤–µ—Ä–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º –≤ –º–∏—Ä–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤.'''

form_text = '''–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥!\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã (–∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏) –∏ –º—ã –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.\n\n–ü—Ä–∏–º–µ—Ä:<code>\n–ò–º—è\n–¢–µ–ª–µ—Ñ–æ–Ω\n–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞\n</code>'''

bot = telebot.TeleBot('1569999673:AAHmLXQGpLHTkh33Gs5ePQOrWMCefMABslw')

#–§–£–ù–ö–¶–ò–ò
def check_data(message):
    global data
    try:
        n, p, e = message.text.split('\n')
        data[message.chat.id].append(n)
        data[message.chat.id].append(p)
        data[message.chat.id].append(e)
    except Exception:
        return False
    else:
        return True

#–ö–õ–ê–í–ò–ê–¢–£–†–´
empty_k = ReplyKeyboardMarkup(resize_keyboard=True)
empty_k.add(KeyboardButton('‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'))

again_k = ReplyKeyboardMarkup(resize_keyboard=True)
again_k.add(KeyboardButton('üîÅ –ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑'))

p_1_k = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
p_1_k.add(KeyboardButton(' üë§ –Ø —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ (–∫–ª–∏–µ–Ω—Ç) –º–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –∫—Ä–µ–¥–∏—Ç–æ–º'), KeyboardButton(' üë• –Ø —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ —Ö–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ'), KeyboardButton(' ü§ù –Ø –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –∏ —Ö–æ—á—É –æ–±—Å—É–¥–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ'), KeyboardButton(' üè† –ú–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Ä–∏—ç–ª—Ç–æ—Ä–∞'), KeyboardButton(' ‚ÑπÔ∏è –†–∞—Å—Å–∫–∞–∂–∏ —Å–Ω–∞—á–∞–ª–∞ –æ —Å–µ–±–µ'))

pill_blue = InlineKeyboardButton('üîµ –Ø –æ—Ç–∫–∞–∑—ã–≤–∞—é—Å—å', callback_data='pill_blue')
pill_red = InlineKeyboardButton('–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å üî¥', callback_data='pill_red')
pills_keyboard = InlineKeyboardMarkup(row_width=2).add(pill_blue, pill_red)

fiz_lico_k = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
fiz_lico_k.add(KeyboardButton(' üè° –ò–ø–æ—Ç–µ—á–Ω—ã–π –∫—Ä–µ–¥–∏—Ç'), KeyboardButton(' üí≥ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç'), KeyboardButton(' üè† –ö—Ä–µ–¥–∏—Ç –ø–æ–¥ –∑–∞–ª–æ–≥ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ '), KeyboardButton(' üí∞ –†–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ'), KeyboardButton(' üèé –ê–≤—Ç–æ–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏–µ'), KeyboardButton('‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'))

ur_lico_k = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
ur_lico_k.add(KeyboardButton(' üè¶ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è'), KeyboardButton(' ‚è± –õ–∏–∑–∏–Ω–≥'), KeyboardButton(' üí≥ –ö—Ä–µ–¥–∏—Ç'), KeyboardButton(' üí∞ –ü—Ä–æ–µ–∫—Ç–Ω–æ–µ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ'), KeyboardButton('‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'))



#–ö–û–î
data = {}
status = {}
pills_holder = {}
@bot.message_handler(commands=['start'])
def hello_func(message):
    msg = f'''<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è!</b>\n
–•–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ —Ä–µ—à–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤?
- –¢—ã —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ, –∏ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å –∏–ø–æ—Ç–µ–∫—É, –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç, –∫—Ä–µ–¥–∏—Ç –ø–æ–¥ –∑–∞–ª–æ–≥ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏–ª–∏ –±—ã—Ç—å –º–æ–∂–µ—Ç —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –≤—ã–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø–æ –∫—Ä–µ–¥–∏—Ç—É?
- –¢—ã —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ, –∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ë–∞–Ω–∫–æ–≤—Å–∫—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é, –∫—Ä–µ–¥–∏—Ç–Ω—É—é –ª–∏–Ω–∏—é –∏–ª–∏ –∏–Ω–æ–π –≤–∏–¥ –∫—Ä–µ–¥–∏—Ç–∞?
- –¢—ã –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –±—Ä–æ–∫–µ—Ä –∏–ª–∏ —Ä–∏–µ–ª—Ç–æ—Ä –∏ –∏—â–µ—à—å –≤–µ—Ä–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è\n
–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç—ã ‚Äì –∏–∑–±—Ä–∞–Ω–Ω—ã–π, <b>{message.from_user.first_name}</b>.
–ú–æ–∂–µ—Ç, —Ç—ã –∏—â–µ—à—å –º–µ–Ω—è –Ω–µ –ø–µ—Ä–≤—ã–π –≥–æ–¥, –Ω–æ —è —Ç–µ–±—è –∏—Å–∫–∞–ª –≤—Å—é –∂–∏–∑–Ω—å!
–ù—É —á—Ç–æ, —Ö–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?\n
<i>–ü—Ä–∏–º–µ—à—å —Å–∏–Ω—é—é —Ç–∞–±–ª–µ—Ç–∫—É ‚Äì –∏ —Å–∫–∞–∑–∫–µ –∫–æ–Ω–µ—Ü.</i> –¢—ã –ø—Ä–æ—Å–Ω–µ—à—å—Å—è –≤ —Å–≤–æ–µ–π –ø–æ—Å—Ç–µ–ª–∏ –∏ –ø–æ–≤–µ—Ä–∏—à—å, —á—Ç–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –∏ —á–µ—Å—Ç–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ –±—Ä–æ–∫–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
<i>–ü—Ä–∏–º–µ—à—å –∫—Ä–∞—Å–Ω—É—é —Ç–∞–±–ª–µ—Ç–∫—É ‚Äì –≤–æ–π–¥–µ—à—å –≤ —Å—Ç—Ä–∞–Ω—É —á—É–¥–µ—Å.</i> –Ø –ø–æ–∫–∞–∂—É —Ç–µ–±–µ, —á—Ç–æ <b>–∫—Ä–µ–¥–∏—Ç—ã ‚Äî —ç—Ç–æ –≤—ã–≥–æ–¥–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ</b>.
'''
    pills_holder[message.chat.id] = message.message_id
    with open('./choose.jpg', 'rb') as img:
        bot.send_photo(message.chat.id, img)
        status[message.chat.id] = 'first'
        bot.send_message(message.chat.id, msg, reply_markup=pills_keyboard, parse_mode='HTML')



@bot.callback_query_handler(func=lambda c: c.data and c.data.startswith('pill'))
def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    pill = callback_query.data[5:]
    bot.answer_callback_query(callback_query.id)
    if pill == 'blue':
        bot.send_message(callback_query.from_user.id, '–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')
    else:
        status[callback_query.from_user.id] = 'first'
        bot.send_message(callback_query.from_user.id, '–¢—ã —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ:', reply_markup=p_1_k)


@bot.message_handler(content_types=['text'])
def get_text(message):
    if message.chat.id not in status:
        status[message.chat.id] = ''
    if '–†–∞—Å—Å–∫–∞–∂–∏ —Å–Ω–∞—á–∞–ª–∞ –æ —Å–µ–±–µ' in message.text:
        bot.send_message(message.chat.id, about_us_text, parse_mode='HTML')
        return True
    if status[message.chat.id] == 'first':
        if '–Ø —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ' in message.text:
            data[message.chat.id] = ['–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ']
            status[message.chat.id] = 'dop_info'
            bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å?', reply_markup=fiz_lico_k)
        elif '–Ø —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ' in message.text:
            data[message.chat.id] = ['–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ']
            status[message.chat.id] = 'dop_info'
            bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å?', reply_markup=ur_lico_k)
        elif '–ø–∞—Ä—Ç–Ω–µ—Ä' in message.text:
            data[message.chat.id] = ['–ü–∞—Ä—Ç–Ω—ë—Ä', '']
            status[message.chat.id] = 'send_form'
            bot.send_message(message.chat.id, form_text, reply_markup=empty_k, parse_mode='HTML')
        elif '–ø–æ–º–æ—â—å —Ä–∏—ç–ª—Ç–æ—Ä–∞' in message.text:
            data[message.chat.id] = ['–ü–æ–º–æ—â—å –†–∏—ç–ª—Ç–æ—Ä–∞', '']
            status[message.chat.id] = 'send_form'
            bot.send_message(message.chat.id, form_text, reply_markup=empty_k, parse_mode='HTML')
    elif status[message.chat.id] == 'dop_info':
        if '–Ω–∞–∑–∞–¥' in message.text:
            status[message.chat.id] = 'first'
            bot.send_message(message.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ', reply_markup=p_1_k)
            return 1
        data[message.chat.id].append(message.text)
        status[message.chat.id] = 'send_form'
        bot.send_message(message.chat.id, form_text, reply_markup=empty_k, parse_mode='HTML')
    elif status[message.chat.id] == 'send_form':
        if '–Ω–∞–∑–∞–¥' in message.text:
            if data[message.chat.id][0] == '–ü–∞—Ä—Ç–Ω—ë—Ä' or data[message.chat.id][0] == '–ü–æ–º–æ—â—å –†–∏—ç–ª—Ç–æ—Ä–∞':
                status[message.chat.id] = 'first'
                data[message.chat.id].pop()
                bot.send_message(message.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ', reply_markup=p_1_k)
            elif data[message.chat.id][0] == '–§–∏–∑–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ':
                status[message.chat.id] = 'dop_info'
                data[message.chat.id].pop()
                bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å?', reply_markup=fiz_lico_k)
            elif data[message.chat.id][0] == '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ':
                status[message.chat.id] = 'dop_info'
                bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –ø–æ–ª—É—á–∏—Ç—å?', reply_markup=ur_lico_k)
            return 1

        if check_data(message):
            status[message.chat.id] = 'finished'
            bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–Ω–∞!', reply_markup=again_k)
            bot.send_message('@mortgagca', f"üë®‚Äçüíª–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n–¢–∏–ø: {data[message.chat.id][0] + ' ' + data[message.chat.id][1]}\n–ò–º—è: {data[message.chat.id][2]}\n–¢–µ–ª–µ—Ñ–æ–Ω: {data[message.chat.id][3]}\n–≠–ª.–ø–æ—á—Ç–∞: {data[message.chat.id][4]}" ,parse_mode='HTML')
        else:
            bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
    elif status[message.chat.id] == 'finished':
        if '–ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑' in message.text:
            status[message.chat.id] = 'first'
            bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —Ä–∞—Å—Å–∫–∞–∂–∏ —Å–Ω–∞—á–∞–ª–∞ –æ —Å–µ–±–µ!', reply_markup=p_1_k)
        else:
            bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞—è–≤–∫—É. –°–∫–æ—Ä–æ –º—ã —Ç–µ–±–µ –ø–æ–∑–≤–æ–Ω–∏–º. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑ - –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É.')





bot.polling(none_stop=True, interval=0)